Metadata-Version: 2.4
Name: bug_finder
Version: 0.1.0
Summary: A Google ADK-based system for finding and fixing bugs in Python code
Author: Your Name
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: google-adk>=1.0.0
Requires-Dist: google-generativeai>=0.3.2
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: astroid>=3.0.1
Requires-Dist: pylint>=3.0.2
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Bug Finder

A Google ADK-based system for finding and fixing bugs in Python code. This project uses Google's Gemini model to analyze Python code, detect potential bugs, and suggest fixes.

## Features

- Code analysis for syntax errors and logical bugs
- Fix suggestions with explanations
- Support for various Python versions and coding styles
- Integration with Google's ADK for advanced AI capabilities

## Installation

1. Clone this repository:
```bash
git clone https://github.com/yourusername/bug-finder.git
cd bug-finder
```

2. Create and activate a virtual environment:
```bash
python -m venv .venv
source .venv/bin/activate  # On Windows: .venv\Scripts\activate
```

3. Install the package in development mode:
```bash
pip install -e .
```

## Configuration

1. Create a `.env` file in the root directory with your Google API key:
```
GOOGLE_API_KEY=your_api_key_here
GOOGLE_GENAI_USE_VERTEXAI=FALSE
```

2. If using Google Cloud Vertex AI instead:
```
GOOGLE_GENAI_USE_VERTEXAI=TRUE
GOOGLE_CLOUD_PROJECT=your_project_id
GOOGLE_CLOUD_LOCATION=your_location
```

## Usage

1. Start the ADK web interface:
```bash
adk web
```

2. Open http://localhost:8000 in your browser

3. Select the "bug_finder" agent from the dropdown

4. Submit Python code for analysis

## Development

- The main agent implementation is in `bug_finder/agent.py`
- Add new tools in the same file
- Use `adk run bug_finder` for terminal-based testing
- Run `adk api_server` to test the REST API

## Contributing

1. Fork the repository
2. Create a feature branch
3. Make your changes
4. Submit a pull request

## License

Apache 2.0 - See LICENSE file for details 
